[project]
name = "dagster-slurm-example"
version = "1.0.0"
description = "Example project how to use dagster with slurm"
authors = [{ name = "Georg Heiler", email = "georg.heiler@ascii.ac.at" }]
requires-python = ">=3.12,<3.13"

[tool.pixi.project]
# not supported  "win-64", due to pip ray
platforms = ["linux-64", "osx-arm64", "linux-aarch64"]
channels = ["conda-forge"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.environments]
secops = { features = [
  "secops",
], solve-group = "secops", no-default-feature = true }
opstooling = { features = [
  "opstooling",
], solve-group = "opstooling", no-default-feature = true }
ci-basics = { features = [
  "ci-basics",
  "opstooling",
], solve-group = "ci-basics" }
dev = { features = [
  "my-infrastructure",
  "dagster-basics",
  "dagster-webserver",
  "submission",
  "cluster",
  "hpc-workload",
  "cluster-dev",
  "ci-basics",
  "dagster-scaffolding",
], solve-group = "dagster-slurm-example" }

packaged-cluster = { features = [
  "submission",
  "cluster",
  "cluster-prod",
], solve-group = "dagster-slurm-example-cluster-submission" }

[tool.pixi.feature.ci-basics.dependencies]
yamllint = ">=1.35.1,<2"
taplo = ">=0.9.3,<0.10"
pytest = ">=8.3.4,<9"
pytest-mock = ">=3.14.0,<4"
pytest-cov = "~=6.0.0"
ruff = ">=0.12.8,<1"
pyrefly = ">=0.27.2,<1"
[tool.pixi.feature.ci-basics.pypi-dependencies]

[tool.pixi.feature.dagster-basics.pypi-dependencies]
dagster = "~=1.11.7"
dagster-postgres = ">=0.27.0,<0.28"
dagster-k8s = ">=0.27.0,<0.28"
dagster-docker = ">=0.27.0,<0.28"

[tool.pixi.feature.dagster-webserver.pypi-dependencies]
dagster-webserver = "~=1.11.7"

[tool.pixi.feature.my-infrastructure.dependencies]
[tool.pixi.feature.my-infrastructure.pypi-dependencies]
dagster-slurm-example = { path = "./projects/dagster-slurm-example", editable = true }
dagster-ray = ">=0.0.20,<1"

[tool.pixi.feature.submission.dependencies]
[tool.pixi.feature.submission.pypi-dependencies]

[tool.pixi.feature.cluster.dependencies]
tomlkit = "<0.13.3"
pandas = ">=2.3.1,<3"
dagster-pipes = "~=1.11.7"
dagster = "~=1.11.7"


[tool.pixi.feature.cluster.pypi-dependencies]
ray = { version = "~=2.48.0", extras = ["data", "default"] }
dagster-ray = ">=0.0.1,<0.25"  

[tool.pixi.feature.cluster-dev.pypi-dependencies]
dagster-slurm = { path = "../projects/dagster-slurm", editable = true }
dagster-slurm-ray = { path = "../projects/dagster-slurm-ray", editable = true }
dagster-slurm-spark = { path = "../projects/dagster-slurm-spark", editable = true }
dagster-slurm-example-shared = { path = "./projects/dagster-slurm-example-shared", editable = true }
[tool.pixi.feature.cluster-prod.pypi-dependencies]
# eventually use released version
# build from pixi/uv build and inject during packaging process

[tool.pixi.feature.hpc-workload.dependencies]
[tool.pixi.feature.hpc-workload.pypi-dependencies]
dagster-slurm-example-hpc-workload = { path = "./projects/dagster-slurm-example-hpc-workload", editable = true }

[tool.pixi.feature.secops.dependencies]
go-sops = "~=3.10.2"
age = "~=1.2.1"

[tool.pixi.feature.opstooling.dependencies]
git = "~=2.49"
pixi-pack = ">=0.7.2,<1"

[tool.pixi.feature.dagster-scaffolding.dependencies]
yarn = "~=4.9.2"

[tool.pixi.feature.dagster-scaffolding.pypi-dependencies]
dagster-dg-cli = "~=1.11.7"
create-dagster = "~=1.11.7"

[tool.pixi.tasks]

[tool.pixi.tasks.start]
cmd = "pixi run -e dev --frozen dagster dev"
cwd = "."
env = { DAGSTER_IS_DEV_CLI = "True"}
description = "Start dagster webserver in dev mode"

# pixi run -e opstooling --frozen build-shared-library
[tool.pixi.tasks.build-shared-library]
cmd = "pixi build -o dist"
cwd = "./projects/dagster-slurm-example-shared"

[tool.pixi.tasks.build-integrations]
cmd = "pixi run -e build --frozen build-lib"
cwd = "../projects"
description = "Build all slurm integrations"
[tool.pixi.tasks.build-hpc-workload]
cmd = "pixi build -o dist"
cwd = "./projects/dagster-slurm-example-hpc-workload"

[tool.pixi.tasks.build-example]
cmd = "pixi build -o dist"
cwd = "./projects/dagster-slurm-example"

[tool.pixi.tasks.pack]
# --ignore-pypi-non-wheel
# For now, deliberately not inject workload here (fast mode)
cmd = "pixi run -e opstooling --frozen pixi-pack --environment packaged-cluster --platform linux-64 --create-executable --inject projects/dagster-slurm-example-shared/dist/dagster_slurm_example_shared-*.conda --inject ../dist/dagster_slurm-*-py3-none-any.whl --inject projects/dagster-slurm-example-hpc-workload/dist/dagster_slurm_example_hpc_workload-*.conda --inject projects/dagster-slurm-example/dist/dagster_slurm_example-*.conda pyproject.toml"
description = "Pack dev environment"

depends-on = ["build-shared-library", "build-integrations", "build-hpc-workload", "build-example"]

[tool.pixi.tasks.pack-aarch]
cmd = "pixi run -e opstooling --frozen pixi-pack --environment packaged-cluster --platform linux-aarch64 --inject projects/dagster-slurm-example-shared/dist/dagster_slurm_example_shared-*.conda --inject ../dist/dagster_slurm-*-py3-none-any.whl --create-executable  --inject projects/dagster-slurm-example-hpc-workload/dist/dagster_slurm_example_hpc_workload-*.conda pyproject.toml"
description = "Pack dev environment for aarch"
depends-on = ["build-shared-library", "build-integrations", "build-hpc-workload"]

[tool.pixi.tasks.clean]
cmd = "pixi run -e opstooling --frozen ./scripts/cleanup_all.sh"
description = "Cleanup"

[tool.pixi.feature.secops.tasks.secrets-encrypt]
cmd = "./scripts/encrypt_secrets.sh"
description = "encrypt secrets with SOPS and AGE"

[tool.pixi.feature.secops.tasks.secrets-decrypt]
cmd = "./scripts/decrypt_secrets.sh"
description = "decrypt secrets with SOPS and AGE"

[tool.pixi.feature.opstooling.tasks.clean-local-branches]
cmd = "./scripts/git_clean_local_branches.sh"
description = "cleanup local non used branches"

[tool.pixi.tasks.fmt]
cmd = "pixi run -e ci-basics --frozen ruff format ./projects && ruff check --fix ./projects && yamllint -c yamllintconfig.yaml projects && taplo fmt"
description = "Format python files"
env = { RUST_LOG = "warn" }

[tool.pixi.tasks.lint]
cmd = "ruff check ./projects && yamllint -c yamllintconfig.yaml ./projects && taplo check && pyrefly check projects --project-excludes projects/dagster-slurm-example-shared/.pixi"
description = "Validate formatting and type check python files"

[tool.pixi.tasks.test]
cmd = "pixi run -e dev --frozen pytest -m 'not data' ."
description = "Run only unit tests (excluding data tests)"

[tool.pixi.tasks.pre-commit-install]
cmd = "pre-commit install"
description = "install pre-commit hooks"

[tool.pixi.tasks.pre-commit-run]
cmd = "pre-commit run --all-files"
description = "run pre-commit on all files"

[tool.dagster]
module_name = "dagster_slurm_example"

[tool.dg]
directory_type = "project"

[tool.dg.project]
root_module = "dagster_slurm_example"
registry_modules = ["dagster_slurm_example.components.*"]


[tool.ruff]
exclude = [".git", "__pycache__", "build", "dist", ".pixi", "*.ipynb"]

line-length = 88

[tool.ruff.lint]
ignore = ["E501"]
select = ["F", "E", "W", "C", "B", "I"]

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.taplo]
exclude = ["pixi.lock"]

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::dagster._utils.warnings.BetaWarning",
  "ignore::dagster._utils.warnings.PreviewWarning",
]
markers = ["data: tests using real input data"]


[tool.pyrefly]
project-includes = [
  "projects/dagster-slurm-example/dagster_slurm_example",
  "projects/dagster-slurm-example-shared/dagster_slurm_example_shared",
  "projects/dagster-slurm-example/dagster_slurm_example_tests",
]
project-excludes = [
  "**/build/**",
  "**/.ruff_cache/**",
  "**/.pixi/**",
  "**/dist/**",
]

search-path = [
  "projects/dagster-slurm-example",
  "projects/dagster-slurm-example-shared",
]

python-version = "3.12.11"
